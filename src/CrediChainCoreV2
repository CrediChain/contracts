// SPDX-License-Identifier: MIT
pragma solidity 0.8.24;

import "./SoulBoundNFT.sol";
import "./IdentityManager.sol";
import "@openzeppelin/contracts/utils/ReentrancyGuard.sol";
import "@openzeppelin/contracts/utils/Pausable.sol";
import "@openzeppelin/contracts/access/AccessControl.sol";

/**
 * @title CrediChainCore V2
 * @dev Enhanced core contract that manages the issuance and revocation of credentials in the form of soulbound NFTs,
 * with improved security, batch operations, reputation system, and multi-role access control.
 * @notice This contract allows verified institutions to issue credentials to verified users with enhanced features.
 */
contract CrediChainCoreV2 is AccessControl, ReentrancyGuard, Pausable {
    // Role definitions
    bytes32 public constant ADMIN_ROLE = keccak256("ADMIN_ROLE");
    bytes32 public constant INSTITUTION_VERIFIER_ROLE = keccak256("INSTITUTION_VERIFIER_ROLE");
    bytes32 public constant EMERGENCY_ROLE = keccak256("EMERGENCY_ROLE");

    error OnlyTheIssuerCanRevoke();
    error CrediChainCore__OnlyVerifiedInstitutions();
    error CrediChainCore__OnlyVerifiedUsers();
    error CrediChainCore__InstitutionAlreadyVerified();
    error CrediChainCore__InstitutionNotFound();
    error CrediChainCore__InvalidCredentialType();
    error CrediChainCore__CredentialExpired();
    error CrediChainCore__InsufficientReputation();
    error CrediChainCore__BatchSizeLimitExceeded();
    error CrediChainCore__InvalidInput();

   // Structs
    struct Institution {
        bool isVerified;
        uint256 reputation;
        uint256 credentialsIssued;
        uint256 credentialsRevoked;
        uint256 verificationTimestamp;
        string name;
        string website;
        InstitutionCategory category;
    }

    struct CredentialMetadata {
        address issuer;
        uint256 issuanceTimestamp;
        uint256 expirationTimestamp;
        CredentialType credentialType;
        bool isActive;
        string ipfsHash;
    }

    // Enums
    enum InstitutionCategory { UNIVERSITY, COLLEGE, CERTIFICATION_BODY, GOVERNMENT, OTHER }
    enum CredentialType { DEGREE, CERTIFICATE, DIPLOMA, LICENSE, BADGE }

    // State variables
    SoulBoundNFT public immutable soulBoundNFT;
    IdentityManager public immutable identityManager;

    mapping(address => Institution) public institutions;
    mapping(uint256 => CredentialMetadata) public credentialMetadata;
    mapping(CredentialType => uint256) public credentialTypeCount;
    mapping(address => uint256[]) public userCredentials;

    // Reputation and governance
    uint256 public constant MIN_REPUTATION_THRESHOLD = 100;
    uint256 public constant MAX_BATCH_SIZE = 50;
    uint256 public constant REPUTATION_DECAY_RATE = 5; // 5% per year

    address[] public verifiedInstitutionsList;
    uint256 public totalCredentialsIssued;
    uint256 public totalInstitutions;

    // Events
    event InstitutionVerified(
        address indexed institution, 
        string name, 
        InstitutionCategory category,
        uint256 timestamp
    );
}
